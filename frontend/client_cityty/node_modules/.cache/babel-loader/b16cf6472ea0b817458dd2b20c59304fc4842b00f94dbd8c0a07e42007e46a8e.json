{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Desktop\\\\CITYTY\\\\frontend\\\\client_cityty\\\\src\\\\components\\\\ProfilPage.js\",\n  _s = $RefreshSig$();\nimport { Button, TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilPage = ({\n  user\n}) => {\n  _s();\n  const [username, setUsername] = useState();\n  const ChangeYourPassword = async () => {\n    let formField = new FormData();\n    //same names as django database fields\n    formField.append(\"email\", user.email);\n    try {\n      await axios({\n        method: \"post\",\n        url: `http://127.0.0.1:8000/api/forgotpassword/`,\n        data: formField\n      });\n      alert(`Un lien de réinitialisation a été envoyé à ${user.email}`);\n    } catch {\n      alert(\"Erreur de connexion...\");\n    }\n  };\n  const ChangeUsername = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profilPageBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"text\", {\n      className: \"textProfil1\",\n      children: [\"Email : \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      className: \"textProfil1\",\n      children: [\"Nom d'utilisateur : \", user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"password\",\n      label: \"Change your username\",\n      size: \"normal\",\n      variant: \"filled\",\n      value: username,\n      onChange: e => ChangeUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      margin: \"normal\",\n      onClick: () => ChangeYourPassword(),\n      children: \"R\\xE9initialiser le mot de passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilPage, \"0czDBqVUaoapYm6N1wNaqD8fX+4=\");\n_c = ProfilPage;\nexport default ProfilPage;\nvar _c;\n$RefreshReg$(_c, \"ProfilPage\");","map":{"version":3,"names":["Button","TextField","React","useState","axios","jsxDEV","_jsxDEV","ProfilPage","user","_s","username","setUsername","ChangeYourPassword","formField","FormData","append","email","method","url","data","alert","ChangeUsername","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","label","size","variant","value","onChange","e","target","margin","onClick","_c","$RefreshReg$"],"sources":["C:/Users/thoma/Desktop/CITYTY/frontend/client_cityty/src/components/ProfilPage.js"],"sourcesContent":["import { Button, TextField } from \"@mui/material\";\r\nimport React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ProfilPage = ({ user }) => {\r\n  const [username, setUsername] = useState();\r\n\r\n  const ChangeYourPassword = async () => {\r\n    let formField = new FormData();\r\n    //same names as django database fields\r\n    formField.append(\"email\", user.email);\r\n    try {\r\n      await axios({\r\n        method: \"post\",\r\n        url: `http://127.0.0.1:8000/api/forgotpassword/`,\r\n        data: formField,\r\n      });\r\n      alert(`Un lien de réinitialisation a été envoyé à ${user.email}`);\r\n    } catch {\r\n      alert(\"Erreur de connexion...\");\r\n    }\r\n  };\r\n\r\n  const ChangeUsername = ()=>{\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"profilPageBox\">\r\n      <text className=\"textProfil1\">Email : {user.email}</text>\r\n      <text className=\"textProfil1\">Nom d'utilisateur : {user.username}</text>\r\n      <TextField\r\n        id=\"password\"\r\n        label=\"Change your username\"\r\n        size=\"normal\"\r\n        variant=\"filled\"\r\n        value={username}\r\n        onChange={(e) => ChangeUsername(e.target.value)}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        margin=\"normal\"\r\n        onClick={() => ChangeYourPassword()}\r\n      >\r\n        Réinitialiser le mot de passe\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilPage;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACjD,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAE1C,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAIC,SAAS,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC9B;IACAD,SAAS,CAACE,MAAM,CAAC,OAAO,EAAEP,IAAI,CAACQ,KAAK,CAAC;IACrC,IAAI;MACF,MAAMZ,KAAK,CAAC;QACVa,MAAM,EAAE,MAAM;QACdC,GAAG,EAAG,2CAA0C;QAChDC,IAAI,EAAEN;MACR,CAAC,CAAC;MACFO,KAAK,CAAE,8CAA6CZ,IAAI,CAACQ,KAAM,EAAC,CAAC;IACnE,CAAC,CAAC,MAAM;MACNI,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAI,CAE3B,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BjB,OAAA;MAAMgB,SAAS,EAAC,aAAa;MAAAC,QAAA,GAAC,UAAQ,EAACf,IAAI,CAACQ,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzDrB,OAAA;MAAMgB,SAAS,EAAC,aAAa;MAAAC,QAAA,GAAC,sBAAoB,EAACf,IAAI,CAACE,QAAQ;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxErB,OAAA,CAACL,SAAS;MACR2B,EAAE,EAAC,UAAU;MACbC,KAAK,EAAC,sBAAsB;MAC5BC,IAAI,EAAC,QAAQ;MACbC,OAAO,EAAC,QAAQ;MAChBC,KAAK,EAAEtB,QAAS;MAChBuB,QAAQ,EAAGC,CAAC,IAAKb,cAAc,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFrB,OAAA,CAACN,MAAM;MACL+B,OAAO,EAAC,WAAW;MACnBK,MAAM,EAAC,QAAQ;MACfC,OAAO,EAAEA,CAAA,KAAMzB,kBAAkB,CAAC,CAAE;MAAAW,QAAA,EACrC;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAClB,EAAA,CA5CIF,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}